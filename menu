#!/bin/bash
# COLOR VALIDATION
clear
colornow=$(cat /etc/rmbl/theme/color.conf)
colorfont=$(cat /etc/rmbl/warnafont/warnaf.conf)
export COLOR1="$(cat /etc/rmbl/theme/$colornow | grep -w "TEXT" | cut -d: -f2|sed 's/ //g')"
export COLBG1="$(cat /etc/rmbl/theme/$colornow | grep -w "BG" | cut -d: -f2|sed 's/ //g')"
y='\033[1;33m' #yellow
BGX="\033[42m"
CYAN="\033[96m"
z="\033[96m"
RED='\033[0;31m'
NC='\033[0m'
gray="\e[1;30m"
Blue="\033[0;34m"
green='\033[0;32m'
grenbo="\e[92;1m"
purple="\033[1;95m"
YELL='\033[0;33m'
#INTALLER-UDP
UDPX="https://docs.google.com/uc?export=download&confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=1S3IE25v_fyUfCLslnujFBSBMNunDHDk2' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\1\n/p')&id=1S3IE25v_fyUfCLslnujFBSBMNunDHDk2"
ISP=$(cat /etc/xray/isp)
CITY=$(cat /etc/xray/city)
IPVPS=$(curl -s ipv4.icanhazip.com)
domain=$(cat /etc/xray/domain)
RAM=$(free -m | awk 'NR==2 {print $2}')
USAGERAM=$(free -m | awk 'NR==2 {print $3}')
MEMOFREE=$(printf '%-1s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
LOADCPU=$(printf '%-0.00001s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
MODEL=$(cat /etc/os-release | grep -w PRETTY_NAME | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/PRETTY_NAME//g')
CORE=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
DATEVPS=$(date +'%d/%m/%Y')
TIMEZONE=$(printf '%(%H:%M:%S)T')
SERONLINE=$(uptime -p | cut -d " " -f 2-10000)
clear
MYIP=$(curl -sS ipv4.icanhazip.com)
echo ""
#########################
# USERNAME
rm -f /usr/bin/user
username=$(curl -sS https://raw.githubusercontent.com/Pemulaajiw/tunnel/main/ip | grep $MYIP | awk '{print $2}')
echo "$username" >/usr/bin/user
# validity
rm -f /usr/bin/e
valid=$(curl -sS https://raw.githubusercontent.com/Pemulaajiw/tunnel/main/ip | grep $MYIP | awk '{print $3}')
echo "$valid" >/usr/bin/e
# DETAIL ORDER
username=$(cat /usr/bin/user)
oid=$(cat /usr/bin/ver)
exp=$(cat /usr/bin/e)
clear
# CERTIFICATE STATUS
d1=$(date -d "$valid" +%s)
d2=$(date -d "$today" +%s)
certifacate=$(((d1 - d2) / 86400))
# VPS Information
DATE=$(date +'%Y-%m-%d')
datediff() {
    d1=$(date -d "$1" +%s)
    d2=$(date -d "$2" +%s)
    echo -e "$COLOR1 $NC Expiry In   : $(( (d1 - d2) / 86400 )) Days"
}
mai="datediff "$Exp" "$DATE""

# Status ExpiRED Active | Geo Project
Info="(${green}Active${NC})"
Error="(${RED}ExpiRED${NC})"
today=`date -d "0 days" +"%Y-%m-%d"`
Exp1=$(curl -sS https://raw.githubusercontent.com/Pemulaajiw/tunnel/main/ip | grep $MYIP | awk '{print $3}')
if [[ $today < $Exp1 ]]; then
sts="${Info}"
else
sts="${Error}"
fi
echo -e "\e[32mloading...\e[0m"
clear

# OS Uptime
uptime="$(uptime -p | cut -d " " -f 2-10)"
cpu_usage1="$(ps aux | awk 'BEGIN {sum=0} {sum+=$3}; END {print sum}')"
cpu_usage="$((${cpu_usage1/\.*} / ${coREDiilik:-1}))"
cpu_usage+=" %"
WKT=$(curl -s ipinfo.io/timezone )
DAY=$(date +%A)
DATE=$(date +%m/%d/%Y)
DATE2=$(date -R | cut -d " " -f -5)
IPVPS=$(curl -s ipinfo.io/ip )
cname=$( awk -F: '/model name/ {name=$2} END {print name}' /proc/cpuinfo )
cores=$( awk -F: '/model name/ {core++} END {print core}' /proc/cpuinfo )
freq=$( awk -F: ' /cpu MHz/ {freq=$2} END {print freq}' /proc/cpuinfo )
tram=$( free -m | awk 'NR==2 {print $2}' )
uram=$( free -m | awk 'NR==2 {print $3}' )
fram=$( free -m | awk 'NR==2 {print $4}' )
clear
# usage
vnstat_profile=$(vnstat | sed -n '3p' | awk '{print $1}' | grep -o '[^:]*')
vnstat -i ${vnstat_profile} >/root/t1
bulan=$(date +%b)
today=$(vnstat -i ${vnstat_profile} | grep today | awk '{print $8}')
todayd=$(vnstat -i ${vnstat_profile} | grep today | awk '{print $8}')
today_v=$(vnstat -i ${vnstat_profile} | grep today | awk '{print $9}')
today_rx=$(vnstat -i ${vnstat_profile} | grep today | awk '{print $2}')
today_rxv=$(vnstat -i ${vnstat_profile} | grep today | awk '{print $3}')
today_tx=$(vnstat -i ${vnstat_profile} | grep today | awk '{print $5}')
today_txv=$(vnstat -i ${vnstat_profile} | grep today | awk '{print $6}')
if [ "$(grep -wc ${bulan} /root/t1)" != '0' ]; then
    bulan=$(date +%b)
    month=$(vnstat -i ${vnstat_profile} | grep "$bulan " | awk '{print $9}')
    month_v=$(vnstat -i ${vnstat_profile} | grep "$bulan " | awk '{print $10}')
    month_rx=$(vnstat -i ${vnstat_profile} | grep "$bulan " | awk '{print $3}')
    month_rxv=$(vnstat -i ${vnstat_profile} | grep "$bulan " | awk '{print $4}')
    month_tx=$(vnstat -i ${vnstat_profile} | grep "$bulan " | awk '{print $6}')
    month_txv=$(vnstat -i ${vnstat_profile} | grep "$bulan " | awk '{print $7}')
else
    bulan=$(date +%Y-%m)
    month=$(vnstat -i ${vnstat_profile} | grep "$bulan " | awk '{print $8}')
    month_v=$(vnstat -i ${vnstat_profile} | grep "$bulan " | awk '{print $9}')
    month_rx=$(vnstat -i ${vnstat_profile} | grep "$bulan " | awk '{print $2}')
    month_rxv=$(vnstat -i ${vnstat_profile} | grep "$bulan " | awk '{print $3}')
    month_tx=$(vnstat -i ${vnstat_profile} | grep "$bulan " | awk '{print $5}')
    month_txv=$(vnstat -i ${vnstat_profile} | grep "$bulan " | awk '{print $6}')
fi
if [ "$(grep -wc yesterday /root/t1)" != '0' ]; then
    yesterday=$(vnstat -i ${vnstat_profile} | grep yesterday | awk '{print $8}')
    yesterday_v=$(vnstat -i ${vnstat_profile} | grep yesterday | awk '{print $9}')
    yesterday_rx=$(vnstat -i ${vnstat_profile} | grep yesterday | awk '{print $2}')
    yesterday_rxv=$(vnstat -i ${vnstat_profile} | grep yesterday | awk '{print $3}')
    yesterday_tx=$(vnstat -i ${vnstat_profile} | grep yesterday | awk '{print $5}')
    yesterday_txv=$(vnstat -i ${vnstat_profile} | grep yesterday | awk '{print $6}')
else
    yesterday=NULL
    yesterday_v=NULL
    yesterday_rx=NULL
    yesterday_rxv=NULL
    yesterday_tx=NULL
    yesterday_txv=NULL
fi
# // Clear
clear
clear && clear && clear
clear;clear;clear
ssh_service=$(/etc/init.d/ssh status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
dropbear_service=$(/etc/init.d/dropbear status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
haproxy_service=$(systemctl status haproxy | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
xray_service=$(systemctl status xray | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
nginx_service=$(systemctl status nginx | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
#Status | Geo Project
clear
# STATUS SERVICE  SSH 
if [[ $ssh_service == "running" ]]; then 
   status_ssh="${green}ON✓${NC}"
else
   status_ssh="${RED}🔴${NC} "
fi

# // SSH Websocket Proxy
ssh_ws=$( systemctl status ws | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $ssh_ws == "running" ]]; then
    status_ws_epro="${green}ON✓${NC}"
else
    status_ws_epro="${RED}🔴${NC} "
fi

# STATUS SERVICE HAPROXY
if [[ $haproxy_service == "running" ]]; then 
   status_haproxy="${green}ON✓${NC}"
else
   status_haproxy="${RED}🔴${NC} "
fi

# STATUS SERVICE XRAY
if [[ $xray_service == "running" ]]; then 
   status_xray="${green}ON✓${NC}"
else
   status_xray="${RED}🔴${NC} "
fi

# STATUS SERVICE NGINX
if [[ $nginx_service == "running" ]]; then 
   status_nginx="${green}ON✓${NC}"
else
   status_nginx="${RED}🔴${NC} "
fi

# STATUS SERVICE Dropbear
if [[ $dropbear_service == "running" ]]; then 
   status_dropbear="${green}ON✓${NC}"
else
   status_dropbear="${RED}🔴${NC} "
fi
#####INFOAKUN
vlx=$(grep -c -E "^#& " "/etc/xray/config.json")
let vla=$vlx/2
vmc=$(grep -c -E "^### " "/etc/xray/config.json")
let vma=$vmc/2
ssh1="$(awk -F: '$3 >= 1000 && $1 != "nobody" {print $1}' /etc/passwd | wc -l)"
trx=$(grep -c -E "^#! " "/etc/xray/config.json")
let trb=$trx/2
ssx=$(grep -c -E "^#ss# " "/etc/xray/config.json")
let ssa=$ssx/2
###########
KANAN="\033[1;32m<\033[1;33m<\033[1;31m<\033[1;31m$NC"
KIRI="\033[1;32m>\033[1;33m>\033[1;31m>\033[1;31m$NC"
########
r="\033[1;31m"  #REDTERANG
a=" ${CYAN}ACCOUNT PREMIUM" 
echo -e " "
echo -e " ${COLOR1}           ┌───────────────────────────────┐$NC"
echo -e " ${COLOR1}           │      ${NC}${BIBlue}.::.${BIYellow}FANVPN${BIBlue}.::.$NC    " ${BIBlue} │
echo -e " ${COLOR1}           └───────────────────────────────┘$NC"
echo -e "${COLOR1} ┌─────────────────────────────────────────────────────┐${NC}"
echo -e " ${COLOR1}│$NC  $COLBG1 System OS ${NC}        $Blue:$NC  "`hostnamectl | grep "Operating System" | cut -d ' ' -f5-` $NC
echo -e " ${COLOR1}│$NC  $COLBG1 Server Ram ${NC}       $Blue:$NC  $uram MB/ $tram MB${NC}"
echo -e " ${COLOR1}│$NC  $COLBG1 System Core ${NC}        $Blue:$NC  $CORE Core${NC}"
echo -e " ${COLOR1}│$NC  $COLBG1 ISP ${NC}              $Blue:$NC  $ISP${NC}"
echo -e " ${COLOR1}│$NC  $COLBG1 CITY ${NC}             $Blue:$NC  $CITY${NC}"
echo -e " ${COLOR1}│$NC  $COLBG1 Domain ${NC}           $Blue:$NC  $domain${NC}"
echo -e " ${COLOR1}│$NC  $COLBG1 IP-VPS ${NC}           $Blue:$NC  $IPVPS${NC}"
echo -e " ${COLOR1}│$NC  $COLBG1 Date & Time ${NC}      $Blue:$NC  $DATEVPS | $TIMEZONE${NC}"
echo -e " ${COLOR1}│$NC  $COLBG1 System Uptime ${NC}    ${Blue}: $NC (uptime -p | cut -d " " -f 2-10) ${NC}"
echo -e " ${COLOR1}└─────────────────────────────────────────────────────┘${NC}"
DATE=$(date +'%d %B %Y')
datediff() {
    d1=$(date -d "$1" +%s)
    d2=$(date -d "$2" +%s)
    echo -e "${BIYellow}         $NC$COLBG1  Expiry In$NC     $Blue:$NC$BIBlue Registered "
}
mai="datediff "$Exp" "$DATE""
echo -e " ${COLOR1}╭════════════════╮╭══════════════════╮╭════════════════════╮${NC}"
echo -e " ${COLOR1}│ ${NC}${COLBG1} SSH$NC : $status_ssh" "        ${COLBG1} NGINX$NC : $status_nginx" "        ${COLBG1} XRAY$NC : $status_xray      $NC${COLOR1}│$NC" 
echo -e " ${COLOR1}│ ${NC}${COLBG1} WS-ePRO$NC : $status_ws_epro" "    ${COLBG1} DROPBEAR$NC : $status_dropbear" "     ${COLBG1} HAPROXY$NC : $status_haproxy   $NC${COLOR1}│$NC" 
echo -e " ${COLOR1}╰════════════════╯╰══════════════════╯╰════════════════════╯${NC}"
echo -e "${COLOR1} ┌─────────────────────────────────────────────────────┐${NC}"
echo -e "   $COLOR1 ${COLBG1}Traffic${NC}      ${COLBG1}Today       Yesterday       Month   ${NC}"
echo -e "   $COLOR1 ${COLBG1}Download${NC}   ${COLBG1}$today_tx $today_txv      $yesterday_tx $yesterday_txv      $month_tx $month_txv   ${NC}"
echo -e "   $COLOR1 ${COLBG1}Upload${NC}     ${COLBG1}$today_rx $today_rxv      $yesterday_rx $yesterday_rxv      $month_rx $month_rxv   ${NC}"
echo -e "   $COLOR1 ${COLBG1}Total${NC}    ${COLBG1}  $todayd $today_v     $yesterday $yesterday_v      $month $month_v  ${NC} "
echo -e " ${COLOR1}└─────────────────────────────────────────────────────┘${NC}"
echo -e "${COLOR1}        ┌─────────────────────────────────────┐" 
echo -e "${COLOR1}         $NC$z  User$NC          $Blue:$BIBlue}MZ AJI GANTENG 💯 " 
if [ $exp \< 1000 ];
then
echo -e "       $y $NC$z License      : $COLBG1 LifeTime 😁 $NC"
else
    datediff "$Exp" "$DATE"
fi;
echo -e "${COLOR1}        └─────────────────────────────────────┘"
echo -e "${COLOR1} ┌─────────────────────────────────────────────────────┐${NC}"
echo -e "${COLOR1}   ${COLBG1}SSH         VMESS           VLESS          TROJAN $NC"
echo -e "${COLOR1}    ${green} $ssh1           $vma               $vla              $trb $NC"
echo -e "${COLOR1} └─────────────────────────────────────────────────────┘${NC}"
echo -e " ${COLOR1}┌─────────────────────────────────────────────────────┐"
echo -e "    $COLOR1 1.$NC $COLBG1 MENU SSH$NC                $COLOR1 6.$NC $COLBG1 SETTINGS$NC" 
echo -e "    $COLOR1 2.$NC $COLBG1 MENU XRAY$NC              $COLOR1 7.$NC $COLBG1 BOT TELE$NC"    
echo -e "    $COLOR1 3.$NC $COLBG1 MENU TROJAN$NC              $COLOR1 8.$NC $BIBlue UPDATE SC$NC"    
echo -e "    $COLOR1 4.$NC $COLBG1 MENU SS-SOCK$NC             $COLOR1 9.$NC $COLBG1 CEK UDP$NC" 
echo -e "    $COLOR1 5.$NC $COLBG1 MENU THEME$NC             $COLOR1 x.$NC $COLBG1 EXIT SCRIPT$NC"     
echo -e " ${COLOR1}└─────────────────────────────────────────────────────┘"
echo -e "                   Version : 1.4.2 ${NC}" | lolcat
echo -e "                   _______________${NC}" | lolcat
echo
read -p " Select menu : " opt
echo -e ""
case $opt in
1 | 01)
clear
m-sshws
;;
2 | 02)
clear
m-xray
;;
3 | 03)
clear
m-trojan
;;
4 | 04)
clear
m-ssws
;;
5 | 05)
clear
m-theme
;;
6 | 06)
clear
m-ftr
;;
7 | 07)
clear
add-bot-panel
;;
8 | 08)
clear
wget https://raw.githubusercontent.com/Pemulaajiw/tunnel/main/update.sh && chmod +x update.sh && ./update.sh
;;
9 | 09)
clear
cekudp
;;
0 | 00)
figlet WARUNG VPN FANTUNNEL
exit
;;
x)
menu
;;
*)
echo -e ""
menu
;;
esac
